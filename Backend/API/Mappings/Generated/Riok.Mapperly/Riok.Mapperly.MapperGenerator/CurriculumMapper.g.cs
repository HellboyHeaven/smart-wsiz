// <auto-generated />
#nullable enable
namespace API.Mappings
{
    public partial class CurriculumMapper
    {
        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        public partial global::Core.Models.Course Map(global::API.Contracts.Requests.Curriculum.CourseRequest request)
        {
            var target = new global::Core.Models.Course();
            target.Id = request.Id;
            target.Name = request.Name;
            target.Code = request.Code;
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        public partial global::API.Contracts.Responses.Curriculum.CourseResponse Map(global::Core.Models.Course entity)
        {
            var target = new global::API.Contracts.Responses.Curriculum.CourseResponse(entity.Id, entity.Name, entity.Code);
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        public partial global::System.Collections.Generic.IEnumerable<global::API.Contracts.Responses.Curriculum.CourseResponse> Map(global::System.Collections.Generic.IEnumerable<global::Core.Models.Course> response)
        {
            return global::System.Linq.Enumerable.Select(response, x => Map(x));
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        public partial global::Core.Models.Group Map(global::API.Contracts.Requests.Curriculum.GroupRequest request)
        {
            var target = new global::Core.Models.Group();
            target.Id = request.Id;
            target.Name = request.Name;
            target.Language = request.Language;
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        public partial global::API.Contracts.Responses.Curriculum.GroupResponse Map(global::Core.Models.Group entity)
        {
            var target = new global::API.Contracts.Responses.Curriculum.GroupResponse(
                entity.Id,
                entity.Name,
                entity.Language,
                Map(entity.Course),
                entity.ToString()
            );
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        public partial global::System.Collections.Generic.IEnumerable<global::API.Contracts.Responses.Curriculum.GroupResponse> Map(global::System.Collections.Generic.IEnumerable<global::Core.Models.Group> response)
        {
            return global::System.Linq.Enumerable.Select(response, x => Map(x));
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        public partial global::Core.Models.Subject Map(global::API.Contracts.Requests.Curriculum.SubjectRequest request)
        {
            var target = new global::Core.Models.Subject();
            target.Id = request.Id;
            target.Name = request.Name;
            target.Type = request.Type;
            target.GradeType = request.GradeType;
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        public partial global::API.Contracts.Responses.Curriculum.SubjectResponse Map(global::Core.Models.Subject entity)
        {
            var target = new global::API.Contracts.Responses.Curriculum.SubjectResponse(entity.Id, entity.Type, entity.Name, entity.GradeType);
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        public partial global::System.Collections.Generic.IEnumerable<global::API.Contracts.Responses.Curriculum.SubjectResponse> Map(global::System.Collections.Generic.IEnumerable<global::Core.Models.Subject> entities)
        {
            return global::System.Linq.Enumerable.Select(entities, x => Map(x));
        }
    }
}