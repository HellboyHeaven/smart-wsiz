// <auto-generated />
#nullable enable
namespace API.Mappings
{
    public partial class ScheduleMapper
    {
        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        public partial global::Core.Models.Module Map(global::API.Contracts.Requests.Schedule.ModuleRequest request)
        {
            var target = new global::Core.Models.Module();
            target.Id = request.Id;
            target.Name = request.Name;
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        public partial global::API.Contracts.Responses.Schedule.ModuleResponse Map(global::Core.Models.Module entity)
        {
            var target = new global::API.Contracts.Responses.Schedule.ModuleResponse(
                entity.Id,
                entity.Name,
                entity.Subject != null ? MapToSubjectResponse(entity.Subject) : throw new System.ArgumentNullException(nameof(entity.Subject)),
                entity.Teacher != null ? MapToTeacherResponse(entity.Teacher) : throw new System.ArgumentNullException(nameof(entity.Teacher)),
                global::System.Linq.Enumerable.ToList(
                    global::System.Linq.Enumerable.Select(entity.Groups, x => x.ToString())
                )
            );
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        public partial global::System.Collections.Generic.IEnumerable<global::API.Contracts.Responses.Schedule.ModuleResponse> Map(global::System.Collections.Generic.IEnumerable<global::Core.Models.Module> entities)
        {
            return global::System.Linq.Enumerable.Select(entities, x => Map(x));
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        public partial global::Core.Models.Lesson Map(global::API.Contracts.Requests.Schedule.LessonRequest request)
        {
            var target = new global::Core.Models.Lesson();
            target.Id = request.Id;
            target.State = request.State;
            target.Room = request.Room;
            target.Module = MapToModule(request.Module);
            target.Date = request.Date;
            target.StartTime = request.StartTime;
            target.EndTime = request.EndTime;
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        public partial global::LessonResponse Map(global::Core.Models.Lesson entity)
        {
            var target = new global::LessonResponse();
            target.State = entity.State;
            target.Date = entity.Date;
            target.Room = entity.Room;
            if (entity.Module != null)
            {
                target.Module = Map(entity.Module);
            }
            target.StartTime = entity.StartTime;
            target.EndTime = entity.EndTime;
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        public partial global::System.Collections.Generic.IEnumerable<global::LessonResponse> Map(global::System.Collections.Generic.IEnumerable<global::Core.Models.Lesson> entities)
        {
            return global::System.Linq.Enumerable.Select(entities, x => Map(x));
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        private global::API.Contracts.Responses.Curriculum.SubjectResponse MapToSubjectResponse(global::Core.Models.Subject source)
        {
            var target = new global::API.Contracts.Responses.Curriculum.SubjectResponse(source.Id, source.Type, source.Name, source.GradeType);
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        private global::API.Contracts.Responses.Auth.TeacherResponse MapToTeacherResponse(global::Core.Models.Users.Teacher source)
        {
            var target = new global::API.Contracts.Responses.Auth.TeacherResponse();
            target.Id = source.Id;
            target.Login = source.Login;
            target.Firstname = source.Firstname;
            target.Lastname = source.Lastname;
            target.Email = source.Email;
            target.Birthday = source.Birthday;
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        private global::Core.Models.Module MapToModule(global::System.Guid source)
        {
            var target = new global::Core.Models.Module();
            return target;
        }
    }
}